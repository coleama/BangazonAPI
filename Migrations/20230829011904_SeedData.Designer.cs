// <auto-generated />
using System;
using Bangazon.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BangazonAPI.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    [Migration("20230829011904_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatePlaced")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateShipped")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = "1",
                            DatePlaced = new DateTime(2023, 8, 28, 20, 19, 4, 243, DateTimeKind.Local).AddTicks(3273),
                            DateShipped = new DateTime(2023, 8, 28, 20, 19, 4, 243, DateTimeKind.Local).AddTicks(3296),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = "2",
                            DatePlaced = new DateTime(2023, 8, 28, 20, 19, 4, 243, DateTimeKind.Local).AddTicks(3298),
                            DateShipped = new DateTime(2023, 8, 28, 20, 19, 4, 243, DateTimeKind.Local).AddTicks(3299),
                            OrderStatus = 2
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Ordered_Products", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ordered_Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            OrderId = 1,
                            Id = 0
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("InStock")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2023, 8, 28, 20, 19, 4, 243, DateTimeKind.Local).AddTicks(3313),
                            Description = "This is a  Electronic Product",
                            ImageUrl = "this is url",
                            InStock = true,
                            Price = 19.99m,
                            ProductType = 1,
                            SellerId = "1"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "123 Test Road",
                            Email = "Email@email.com",
                            FirstName = "Test",
                            IsSeller = true,
                            LastName = "Testerson"
                        },
                        new
                        {
                            Id = "2",
                            Address = "123 Not Test Road",
                            Email = "email@notEmail.com",
                            FirstName = "Bob",
                            IsSeller = false,
                            LastName = "Bobberson"
                        });
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.Property<string>("UsersId")
                        .HasColumnType("text");

                    b.HasKey("ProductsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ProductUser");
                });

            modelBuilder.Entity("Bangazon.Models.Ordered_Products", b =>
                {
                    b.HasOne("Bangazon.Models.Order", "Order")
                        .WithMany("ordered_Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", "Product")
                        .WithMany("ordered_Products")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.HasOne("Bangazon.Models.Order", null)
                        .WithMany("Users")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.HasOne("Bangazon.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("ordered_Products");
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Navigation("ordered_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
